#!/bin/bash

echo "Updating dependencies before committing..."

# Define config directory
ENV_NAME="PCenv"
REQUIREMENTS_FILE="requirements.txt"

# Ensure the virtual environment exists
if [ -d "$ENV_NAME" ]; then
    echo "ðŸ“¦ Freezing pip dependencies into $REQUIREMENTS_FILE..."
    
    # Detect OS and activate the environment accordingly
    if [[ "$OSTYPE" == "darwin"* || "$OSTYPE" == "linux-gnu"* ]]; then
        source "$ENV_NAME/bin/activate"
    elif [[ "$OSTYPE" == "msys" || "$OSTYPE" == "cygwin" || "$OSTYPE" == "win32" ]]; then
        source "$ENV_NAME/Scripts/activate"
    else
        echo "Unsupported OS: $OSTYPE"
        exit 1
    fi

    # Freeze dependencies to config/requirements.txt
    pip freeze > "$REQUIREMENTS_FILE"

    # Ensure config/requirements.txt is being tracked
    if ! git ls-files --error-unmatch "$REQUIREMENTS_FILE" >/dev/null 2>&1; then
        git add "$REQUIREMENTS_FILE"
        echo "requirements.txt is now tracked in config/"
    else
        echo "requirements.txt was already tracked."
    fi
else
    echo "Virtual environment '$ENV_NAME' not found! Skipping dependency update."
fi

echo "âœ… Dependencies updated! Proceeding with commit..."

